.TH "PAPIf_hl_read" 3 "Fri Aug 30 2024 19:06:49" "Version 7.2.0.0b1" "PAPI" \" -*- nroff -*-
.ad l
.nh
.SH NAME
PAPIf_hl_read \- Reads and stores hardware events inside of an instrumented code region\&.  

.SH SYNOPSIS
.br
.PP
.SH "Detailed Description"
.PP 

.PP
\fBFortran Prototype:\fP
.RS 4
#include <fpapi\&.h> 
.br
int \fBPAPIf_hl_read( C_STRING region, C_INT check )\fP
.RE
.PP
\fBParameters\fP
.RS 4
\fIregion\fP -- a unique region name corresponding to \fBPAPIf_hl_region_begin\fP
.RE
.PP
\fBReturn values\fP
.RS 4
\fIPAPI_OK\fP 
.br
\fIPAPI_ENOTRUN\fP -- EventSet is currently not running or could not determined\&. 
.br
\fIPAPI_ESYS\fP -- A system or C library call failed inside PAPI, see the errno variable\&. 
.br
\fIPAPI_EMISC\fP -- PAPI has been deactivated due to previous erros\&. 
.br
\fIPAPI_ENOMEM\fP -- Insufficient memory\&.
.RE
.PP
\fBPAPIf_hl_read\fP reads hardware events and stores them internally inside of an instrumented code region\&. Assumes that \fBPAPIf_hl_region_begin\fP was called before\&.
.PP
\fBExample:\fP
.RS 4

.RE
.PP
.PP
.nf
integer retval

call PAPIf_hl_region_begin("computation", retval)
if ( retval \&.NE\&. PAPI_OK ) then
    write (*,*) "PAPIf_hl_region_begin failed!"
end if

!do some computation here

call PAPIf_hl_read("computation", retval)
if ( retval \&.NE\&. PAPI_OK ) then
    write (*,*) "PAPIf_hl_read failed!"
end if

!do some computation here

call PAPIf_hl_region_end("computation", retval)
if ( retval \&.NE\&. PAPI_OK ) then
    write (*,*) "PAPIf_hl_region_end failed!"
end if
.fi
.PP
.PP
\fBSee also\fP
.RS 4
\fBPAPI_hl_read\fP 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for PAPI from the source code\&.
