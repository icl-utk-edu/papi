.TH "PAPI_remove_events" 3 "Fri Aug 30 2024 19:06:49" "Version 7.2.0.0b1" "PAPI" \" -*- nroff -*-
.ad l
.nh
.SH NAME
PAPI_remove_events \- Remove an array of hardware event codes from a PAPI event set\&.  

.SH SYNOPSIS
.br
.PP
.SH "Detailed Description"
.PP 
A hardware event can be either a PAPI Preset or a native hardware event code\&. For a list of PAPI preset events, see PAPI_presets or run the papi_avail utility in the PAPI distribution\&. PAPI Presets can be passed to \fBPAPI_query_event\fP to see if they exist on the underlying architecture\&. For a list of native events available on current platform, run papi_native_avail in the PAPI distribution\&. It should be noted that \fBPAPI_remove_events\fP can partially succeed, exactly like \fBPAPI_add_events\fP\&.
.PP
\fBC Prototype:\fP
.RS 4
#include <\fBpapi\&.h\fP> 
.br
 int PAPI_remove_events( int  EventSet, int * EventCode, int  number );
.RE
.PP
\fBParameters\fP
.RS 4
\fIEventSet\fP an integer handle for a PAPI event set as created by \fBPAPI_create_eventset\fP 
.br
\fI*Events\fP an array of defined events 
.br
\fInumber\fP an integer indicating the number of events in the array *EventCode
.RE
.PP
\fBReturn values\fP
.RS 4
\fIPositive\fP integer The number of consecutive elements that succeeded before the error\&. 
.br
\fIPAPI_EINVAL\fP One or more of the arguments is invalid\&. 
.br
\fIPAPI_ENOEVST\fP The EventSet specified does not exist\&. 
.br
\fIPAPI_EISRUN\fP The EventSet is currently counting events\&. 
.br
\fIPAPI_ECNFLCT\fP The underlying counter hardware can not count this event and other events in the EventSet simultaneously\&. 
.br
\fIPAPI_ENOEVNT\fP The PAPI preset is not available on the underlying hardware\&.
.RE
.PP
\fBExample:\fP
.RS 4

.PP
.nf
int EventSet = PAPI_NULL;
int Events[] = {PAPI_TOT_INS, PAPI_FP_OPS};
int ret;
 
 // Create an empty EventSet
ret = PAPI_create_eventset(&EventSet);
if (ret != PAPI_OK) handle_error(ret);

// Add two events to our EventSet
ret = PAPI_add_events(EventSet, Events, 2);
if (ret != PAPI_OK) handle_error(ret);

// Start counting
ret = PAPI_start(EventSet);
if (ret != PAPI_OK) handle_error(ret);

// Stop counting, ignore values
ret = PAPI_stop(EventSet, NULL);
if (ret != PAPI_OK) handle_error(ret);

// Remove event
ret = PAPI_remove_events(EventSet, Events, 2);
if (ret != PAPI_OK) handle_error(ret);

.fi
.PP
.RE
.PP
.PP
\fBSee also\fP
.RS 4
\fBPAPI_cleanup_eventset\fP \fBPAPI_destroy_eventset\fP \fBPAPI_event_name_to_code\fP PAPI_presets \fBPAPI_add_event\fP \fBPAPI_add_events\fP 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for PAPI from the source code\&.
